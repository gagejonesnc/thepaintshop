/*************************
      COLORS
 */



/*************************
      COLOR OPS
 */



/*************************
      MIXINS
 */
@mixin angle($pseudo, $angle, $flip: false) {
  // Possible values for $pseudo are: before, after, both
  @if $pseudo == 'before' or $pseudo == 'after' or $pseudo == 'both' {
    position: relative;
    z-index: 1;
    $selector: if($pseudo == 'both', '&:before,&:after', '&:#{$pseudo}');

    #{$selector} {
      background: inherit;
      content: '';
      display: block;
      height: 50%;
      left: 0;
      position: absolute;
      right: 0;
      z-index: -1;
      -webkit-backface-visibility: hidden; // for Chrome Windows
    }

    @if $pseudo == 'before' {
      #{$selector} {
        top: -35%;

        @if $flip {
          transform: skewY($angle * -1);
          transform-origin: 0 0;
        } @else {
          transform: skewY($angle);
          transform-origin: 100% 0;
        }
      }
    }

    @if $pseudo == 'after' {
      #{$selector} {
        bottom: -15%;

        @if $flip {
          transform: skewY($angle);
          transform-origin: 0 100%;
        } @else {
          transform: skewY($angle * -1);
          transform-origin: 100%;
        }
      }
    }

    @if $pseudo == 'both' {
      &:before {
        top: 0;

        @if $flip {
          transform: skewY($angle * -1);
          transform-origin: 0 0;
        } @else {
          transform: skewY($angle);
          transform-origin: 100% 0;
        }
      }

      &:after {
        bottom: 0;

        @if $flip {
          transform: skewY($angle);
          transform-origin: 0 0;
        } @else {
          transform: skewY($angle * -1);
          transform-origin: 100%;
        }
      }
    }
  }
}
// slanted edges here
@mixin slantedEdges($deg) {
  .edge--bottom { @include angle(after, $deg); }

  .edge--bottom--reverse { @include angle(after, $deg, true); }

  .edge--top { @include angle(before, $deg); }

  .edge--top--reverse { @include angle(before, $deg, true); }

  .edge--both { @include angle(both, $deg); }

  .edge--both--reverse { @include angle(both, $deg, true); }
}



/*************************
      MEDIA QUERIES
 */
@media (min-width: 961px) {
  $deg: 2.5deg;
  @include slantedEdges($deg);
  .hero {
    & svg {
      width: 50%;
    }
  }
}
@media (max-width: 960px) and (min-width: 481px) {
  $deg: 3.25deg;
  @include slantedEdges($deg);
  .hero {
    & svg {
      width: 75%;
    }
    & .tagline {
      font-size: 1em;
    }
  }
}
@media (max-width: 480px) {
  $deg: 4.5deg;
  @include slantedEdges($deg);
  .hero {
    & svg {
      width: 90%;
    }
    & .tagline {
      font-size: .75em;
    }
  }
  .cards {
    flex-direction: column;
    & > .card {
      width: 75%;
    }
  }
}

/*************************
      STYLES
 */
section section {
  padding: 25px 0;
}

.hero {
  position: relative;
  z-index: -1;
  background-color: #cacaca;

  & svg {
    display: block;
    margin: 0 auto;
    padding-top: 100px;
  }

}

.services {
  padding: 100px 0;
}

.cards {
  display: flex;
  align-content: center;
  justify-content: space-between;

  & > .card {
    margin: 0 auto;
  }

  &.--width-2 > card {
    width: 40%;
  }

  &.--width-3 > card {
    width: 30%;
  }

}

.button {
  display: block;
  width: 250px;
  height: 50px;
  background-color: #333;
  text-decoration: none;
  color: #fff;
  font-weight: 600;
  cursor: pointer;
  margin: 25px auto 0 auto;
}



























.subsection {
  padding: 25px 0;
}
.services {
  padding: 100px 0;
}
.cards {
  display: flex;
  align-content: center;
  justify-content: space-between;
}
.card {
  margin: 0 auto;
}
.cards.--width-2 .card{
  width: 40%;
}
.cards.--width-3 .card{
  width: 30%;
}
.btn {
  display: block;
  width: 250px;
  height: 50px;
  background-color: #333;
  text-decoration: none;
  color: #fff;
  font-weight: 600;
  cursor: pointer;
  margin: 25px auto 0 auto;
}


/* Dont fuck with this.*/
.hero {
  position: relative;
  z-index: -1;
  background-color: #cacaca;
}

.hero svg {
  display: block;
  margin: 0 auto;
  padding-top: 100px;
}

.hero:before, .hero:after {
  content: '';
  display: block;
  height: 50%;
  left: 0;
  position: absolute;
  right: 0;
  z-index: -10;
  -webkit-backface-visibility: hidden;
}
.hero:before {
  background: #fff;
  top: -35%;
  -webkit-transform-origin: 100% 0;
  transform-origin: 100% 0;
}
.hero:after {
  background: #cacaca;
  bottom: -15%;
  -webkit-transform-origin: 100%;
  transform-origin: 100%;
}
@media (min-width: 961px) {
  .hero svg{
    width: 50%;
  }
}
@media (max-width: 960px) and (min-width: 481px) {
  .hero svg{
    width: 75%;
  }
  .hero .tagline {
    font-size: 1em
  }
}
@media (max-width: 480px) {
  .hero svg{
    width: 90%;
  }
  .hero .tagline {
    font-size: .75em
  }

  .services .cards {
    flex-direction: column;
  }
  .services .cards .card {
    width: 75%;
  }
}
